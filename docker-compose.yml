version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: recruiter_postgres
    environment:
      POSTGRES_USER: recruiter
      POSTGRES_PASSWORD: recruiter_pass
      POSTGRES_DB: recruiter_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U recruiter"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: recruiter_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AI Recruiter Copilot API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: recruiter_api
    environment:
      - DATABASE_URL=postgresql://recruiter:recruiter_pass@postgres:5432/recruiter_db
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=production
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./agents:/app/agents
      - ./tools:/app/tools
      - ./workflows:/app/workflows
      - ./configs:/app/configs
      - ./chroma_db:/app/chroma_db
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  # nginx:
  #   image: nginx:alpine
  #   container_name: recruiter_nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #   depends_on:
  #     - api
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: recruiter_network
